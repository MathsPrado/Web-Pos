@page "/login"
@using System.Net.Http.Json
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject NavigationManager Navigation

<h3 class="text-center mb-4">Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" class="login-form">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Usuário</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
    </div>

    <div class="form-group">
        <label for="password">Senha</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary btn-block">Entrar</button>
    </div>

    @if (!string.IsNullOrEmpty(loginErrorMessage))
    {
        <div class="alert alert-danger">
            @loginErrorMessage
        </div>
    }
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private string loginErrorMessage;

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }

    private async Task HandleLogin()
    {
        var loginData = new
        {
            username = loginModel.Username,
            password = loginModel.Password
        };

        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/login", loginData);
            if (response.IsSuccessStatusCode)
            {
                var token = await response.Content.ReadAsStringAsync();

                // Armazenar token no localStorage via JSRuntime
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", token);

                // Redirecionar para a página principal
                Navigation.NavigateTo("/home");
            }
            else
            {
                loginErrorMessage = "Credenciais inválidas. Tente novamente.";
            }
        }
        catch (Exception)
        {
            loginErrorMessage = "Ocorreu um erro ao tentar fazer login. Tente novamente.";
        }
    }
}
